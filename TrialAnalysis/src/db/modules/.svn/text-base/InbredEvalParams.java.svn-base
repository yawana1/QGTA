package db.modules;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

public class InbredEvalParams {
	private String doc_name_male;
	private String doc_name_female;
	private String project_name_male;
	private String project_name_female;
	private String season_name_male;
	private String season_name_female;
	private String season_name_start;
	private String season_name_end;
	private String type_male;
	private String type_female;
	private String filter_zone;
	private String filter_stage;
	private List<String> class_id;
	private List<String> analysis_state;
    private String project_names;
    private String males;
    private String females;

	public Map<String, Object> getSqlParams() {
		Map<String, Object> parameters = new HashMap<>();
		skipNull(parameters, "docNameMale", doc_name_male);
		skipNull(parameters, "docNameFemale", doc_name_female);
		skipNull(parameters, "projectNameMale", project_name_male);
		skipNull(parameters, "projectNameFemale", project_name_female);
		skipNull(parameters, "seasonNameMale", season_name_male);
		skipNull(parameters, "seasonNameFemale", season_name_female);
		skipNull(parameters, "seasonNameStart", season_name_start);
		skipNull(parameters, "seasonNameEnd", season_name_end);
		skipNull(parameters, "typeMale", type_male);
		skipNull(parameters, "typeFemale", type_female);
		skipNull(parameters, "zone_ids", filter_zone);
		skipNull(parameters, "exp_stage", filter_stage);
		skipNull(parameters, "class_id", StringUtils.join(class_id,","));
		skipNull(parameters, "analysis_state", StringUtils.join(analysis_state,","));
		skipNull(parameters, "project_names", project_names);
		skipNull(parameters, "males", males);
		skipNull(parameters, "females", females);
		return parameters;
	}
	
	private void skipNull(Map<String, Object> map, String key, Object value){
		if(value == null){
			value = "";
		}
		map.put(key, value);
	}

	public Map<String, String> getParamsAsMap() {
		Map<String, String> parameters = new HashMap<>();
		parameters.put("doc_name_male", doc_name_male);
		parameters.put("doc_name_female", doc_name_female);
		parameters.put("project_name_male", project_name_male);
		parameters.put("project_name_female", project_name_female);
		parameters.put("season_name_male", season_name_male);
		parameters.put("season_name_female", season_name_female);
		parameters.put("season_name_start", season_name_start);
		parameters.put("season_name_end", season_name_end);
		parameters.put("type_male", type_male);
		parameters.put("type_female", type_female);
		parameters.put("filter_zone", filter_zone);
		parameters.put("filter_stage", filter_stage);
		parameters.put("class_id", StringUtils.join(class_id,","));
		parameters.put("analysis_state", StringUtils.join(analysis_state,","));
		parameters.put("projects_name", project_names);
		parameters.put("males", males);
		parameters.put("females", females);
		return parameters;
	}

	public void setParams(Map<String, String> paramMap) {
		doc_name_male = paramMap.get("doc_name_male");
		doc_name_female = paramMap.get("doc_name_female");
		project_name_male = paramMap.get("project_name_male");
		project_name_female = paramMap.get("project_name_female");
		season_name_male = paramMap.get("season_name_male");
		season_name_female = paramMap.get("season_name_female");
		season_name_start = paramMap.get("season_name_start");
		season_name_end = paramMap.get("season_name_end");
		type_male = paramMap.get("type_male");
		type_female = paramMap.get("type_female");
		filter_zone = paramMap.get("filter_zone");
		filter_stage = paramMap.get("filter_stage");
		class_id = Arrays.asList(paramMap.get("class_id").split(","));
		analysis_state = Arrays.asList(paramMap.get("analysis_state").split(","));
		project_names = paramMap.get("project_names");
		males = paramMap.get("males");
		females = paramMap.get("females");
	}
	
}
